[{"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/index.tsx":"1","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/reportWebVitals.ts":"2","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/App.tsx":"3","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/Nav.tsx":"4","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/home/About.tsx":"5","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/home/Home.tsx":"6","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/home/Mission.tsx":"7","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/assets/data.ts":"8","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/home/Achievements.tsx":"9","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/skills/Skills.tsx":"10","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/skills/Top.tsx":"11","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/portfolio/Portfolio.tsx":"12","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/portfolio/Top.tsx":"13","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/contacts/Contacts.tsx":"14","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/Footer.tsx":"15","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/portfolio/Projects.tsx":"16","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/contacts/Top.tsx":"17","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/contacts/Content.tsx":"18","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/blog/Blog.tsx":"19","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/blog/Article.tsx":"20","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/blog/Top.tsx":"21"},{"size":501,"mtime":1610604154294,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1610601955587,"results":"24","hashOfConfig":"23"},{"size":1195,"mtime":1611575472261,"results":"25","hashOfConfig":"23"},{"size":889,"mtime":1611558107090,"results":"26","hashOfConfig":"23"},{"size":668,"mtime":1611554457269,"results":"27","hashOfConfig":"23"},{"size":260,"mtime":1611550533600,"results":"28","hashOfConfig":"23"},{"size":419,"mtime":1611137278259,"results":"29","hashOfConfig":"23"},{"size":4172,"mtime":1611574971578,"results":"30","hashOfConfig":"23"},{"size":928,"mtime":1611146709187,"results":"31","hashOfConfig":"23"},{"size":141,"mtime":1611146179994,"results":"32","hashOfConfig":"23"},{"size":611,"mtime":1611552742775,"results":"33","hashOfConfig":"23"},{"size":201,"mtime":1611550544974,"results":"34","hashOfConfig":"23"},{"size":560,"mtime":1611552995394,"results":"35","hashOfConfig":"23"},{"size":196,"mtime":1611555427144,"results":"36","hashOfConfig":"23"},{"size":970,"mtime":1611569012599,"results":"37","hashOfConfig":"23"},{"size":1357,"mtime":1611551123372,"results":"38","hashOfConfig":"23"},{"size":649,"mtime":1611554990830,"results":"39","hashOfConfig":"23"},{"size":2023,"mtime":1611557354934,"results":"40","hashOfConfig":"23"},{"size":813,"mtime":1611575790697,"results":"41","hashOfConfig":"23"},{"size":978,"mtime":1611575907005,"results":"42","hashOfConfig":"23"},{"size":514,"mtime":1611575808022,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1hrui41",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/index.tsx",[],["91","92"],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/reportWebVitals.ts",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/App.tsx",["93"],"import { Switch, Route, BrowserRouter as Router, useRouteMatch } from \"react-router-dom\";\nimport './App.less';\nimport Article from './components/blog/Article';\nimport Blog from './components/blog/Blog';\nimport Contacts from './components/contacts/Contacts';\nimport Footer from './components/Footer';\nimport Home from './components/home/Home';\nimport Nav from './components/Nav';\nimport Portfolio from './components/portfolio/Portfolio';\nimport Skills from './components/skills/Skills';\n\nconst App: React.FC = (): JSX.Element => {\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/skills\">\n            <Skills />\n          </Route>\n          <Route path=\"/portfolio\">\n            <Portfolio />\n          </Route>\n          <Route path=\"/contacts\">\n            <Contacts />\n          </Route>\n          <Route exact path=\"/blog\">\n            <Blog />\n          </Route>\n          <Route path=\"/blog/:topicId\">\n            <Article article=\"canvas\" />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/Nav.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/home/About.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/home/Home.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/home/Mission.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/assets/data.ts",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/home/Achievements.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/skills/Skills.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/skills/Top.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/portfolio/Portfolio.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/portfolio/Top.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/contacts/Contacts.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/Footer.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/portfolio/Projects.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/contacts/Top.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/contacts/Content.tsx",[],"/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/blog/Blog.tsx",["94","95"],"import { useEffect, useState } from \"react\";\nimport { Article, blog } from \"../../assets/data\";\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport Top from './Top';\n\nconst prefix = 'blog';\n\nconst Blog: React.FC = ():JSX.Element => {\n  const [text, setText] = useState<string>('');\n\n  useEffect(() => {\n    fetch(blog[0].file).then(res => res.text()).then(data => { setText(data) });\n\n  }, []);\n\n  const { path, url } = useRouteMatch();\n  \n  return (\n    <>\n    <Top />\n    <div className={prefix}>\n      {blog.map((article: Article): JSX.Element => (\n        <div className={`${prefix}-item`}>\n          <h1>{article.title}</h1>\n          <div>{article.description}</div>\n          <Link to={`${url}/${article.path}`}>Read</Link>\n        </div>\n      ))}\n    </div>\n    </>\n  )\n}\n\nexport default Blog;","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/blog/Article.tsx",["96"],"import { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {materialLight} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport canvas from '../../assets/blog/canvas.md';\n\ninterface Article {\n  article: string;\n}\n\nconst Article: React.FC<Article> = ({ article }):JSX.Element => {\n  const [text, setText] = useState<string>('');\n\n  const renderers = {\n    code: ({ language, value }: any) => \n      <SyntaxHighlighter style={materialLight} language={language} children={value} />\n  };\n\n  useEffect(() => {\n    async function getFile() {\n      console.log(canvas);\n  \n      fetch(canvas).then(res => res.text()).then(data => { setText(data) } );\n    }\n\n    getFile();\n  }, []);\n\n  return (\n    <div>\n      <ReactMarkdown source={text} plugins={[ gfm ]} className='blog' renderers={renderers} />\n    </div>\n  )\n}\n\nexport default Article;","/Users/dmitriilobanov/Documents/projects/portfolio2021/src/components/blog/Top.tsx",[],["97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":50,"nodeType":"105","messageId":"106","endLine":1,"endColumn":63},{"ruleId":"103","severity":1,"message":"107","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":14},{"ruleId":"103","severity":1,"message":"108","line":16,"column":11,"nodeType":"105","messageId":"106","endLine":16,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":12,"column":7,"nodeType":"105","messageId":"111","endLine":12,"endColumn":33},{"ruleId":"99","replacedBy":"112"},{"ruleId":"101","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'text' is assigned a value but never used.","'path' is assigned a value but never used.","@typescript-eslint/no-redeclare","'Article' is already defined.","redeclared",["114"],["115"],"no-global-assign","no-unsafe-negation"]